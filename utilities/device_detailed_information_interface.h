/************************************************************************************************
 * This code was automatically generated by Digital Twin Code Generator tool 0.6.2.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 *
 * Generated Date: 2019年10月2日
 ***********************************************************************************************/

#ifndef DEVICE_DETAILED_INFORMATION_INTERFACE_H
#define DEVICE_DETAILED_INFORMATION_INTERFACE_H

#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <string.h>
#include "digitaltwin_interface_client.h"
#include "azure_c_shared_utility/xlogging.h"
#include "azure_c_shared_utility/threadapi.h"

#include "digitaltwin_client_helper.h"
#include "digitaltwin_serializer.h"
#include "parson.h"
#include "../UTX_3117_impl.h"

#ifdef __cplusplus
extern "C"
{
#endif

typedef enum DEVICE_DETAILED_INFORMATION_READONLY_PROPERTY_TAG
{
    Device_Detailed_Information_DEVICENAME_PROPERTY,
    Device_Detailed_Information_AGENTID_PROPERTY,
    Device_Detailed_Information_DEVICEGROUPS_PROPERTY,
    Device_Detailed_Information_WAKEONLAN_PROPERTY,
    Device_Detailed_Information_CONNECTIONSTATUS_PROPERTY,
    Device_Detailed_Information_AUTOREPORT_PROPERTY,
    Device_Detailed_Information_STATUSMESSAGE_PROPERTY,
    Device_Detailed_Information_PRODUCT_PROPERTY,
    Device_Detailed_Information_MANUFACTURER_PROPERTY,
    Device_Detailed_Information_VERSION_PROPERTY,
    Device_Detailed_Information_PLATFORM_PROPERTY,
    Device_Detailed_Information_OPERATINGSYSTEM_PROPERTY,
    Device_Detailed_Information_MAC_PROPERTY,
    Device_Detailed_Information_CPU_PROPERTY,
    Device_Detailed_Information_MEMORY_PROPERTY,
    Device_Detailed_Information_GRAFANAFOLDER_PROPERTY,
    Device_Detailed_Information_GRAFANABOARD_PROPERTY,
    Device_Detailed_Information_LASTCONNECTEDAT_PROPERTY
} DEVICE_DETAILED_INFORMATION_PROPERTY;

// DigitalTwin interface name from service perspective.
static const char Device_Detailed_InformationInterfaceId[] = "urn:Advantech:UTX_3117:DeviceDetailedInformation:1";
static const char Device_Detailed_InformationInterfaceInstanceName[] = "Device_Detailed_Information";

// Telemetry names for this interface.

// Property names for this interface.

#define Device_Detailed_InformationInterface_DeviceNameProperty "DeviceName"

#define Device_Detailed_InformationInterface_AgentIDProperty "AgentID"

#define Device_Detailed_InformationInterface_DeviceGroupsProperty "DeviceGroups"

#define Device_Detailed_InformationInterface_WakeOnLANProperty "WakeOnLAN"

#define Device_Detailed_InformationInterface_ConnectionStatusProperty "ConnectionStatus"

#define Device_Detailed_InformationInterface_AutoReportProperty "AutoReport"

#define Device_Detailed_InformationInterface_StatusMessageProperty "StatusMessage"

#define Device_Detailed_InformationInterface_ProductProperty "Product"

#define Device_Detailed_InformationInterface_ManufacturerProperty "Manufacturer"

#define Device_Detailed_InformationInterface_VersionProperty "Version"

#define Device_Detailed_InformationInterface_PlatformProperty "Platform"

#define Device_Detailed_InformationInterface_OperatingSystemProperty "OperatingSystem"

#define Device_Detailed_InformationInterface_MACProperty "MAC"

#define Device_Detailed_InformationInterface_CPUProperty "CPU"

#define Device_Detailed_InformationInterface_MemoryProperty "Memory"

#define Device_Detailed_InformationInterface_GrafanaFolderProperty "GrafanaFolder"

#define Device_Detailed_InformationInterface_GrafanaBoardProperty "GrafanaBoard"

#define Device_Detailed_InformationInterface_LastConnectedAtProperty "LastConnectedAt"

// Command names for this interface

// Methods
DIGITALTWIN_INTERFACE_CLIENT_HANDLE Device_Detailed_InformationInterface_Create();

void Device_Detailed_InformationInterface_Close(DIGITALTWIN_INTERFACE_CLIENT_HANDLE digitalTwinInterfaceClientHandle);

DIGITALTWIN_CLIENT_RESULT Device_Detailed_InformationInterface_Property_ReportAll();

DIGITALTWIN_CLIENT_RESULT Device_Detailed_InformationInterface_Property_ReportDeviceName();

DIGITALTWIN_CLIENT_RESULT Device_Detailed_InformationInterface_Property_ReportAgentID();

DIGITALTWIN_CLIENT_RESULT Device_Detailed_InformationInterface_Property_ReportDeviceGroups();

DIGITALTWIN_CLIENT_RESULT Device_Detailed_InformationInterface_Property_ReportWakeOnLAN();

DIGITALTWIN_CLIENT_RESULT Device_Detailed_InformationInterface_Property_ReportConnectionStatus();

DIGITALTWIN_CLIENT_RESULT Device_Detailed_InformationInterface_Property_ReportAutoReport();

DIGITALTWIN_CLIENT_RESULT Device_Detailed_InformationInterface_Property_ReportStatusMessage();

DIGITALTWIN_CLIENT_RESULT Device_Detailed_InformationInterface_Property_ReportProduct();

DIGITALTWIN_CLIENT_RESULT Device_Detailed_InformationInterface_Property_ReportManufacturer();

DIGITALTWIN_CLIENT_RESULT Device_Detailed_InformationInterface_Property_ReportVersion();

DIGITALTWIN_CLIENT_RESULT Device_Detailed_InformationInterface_Property_ReportPlatform();

DIGITALTWIN_CLIENT_RESULT Device_Detailed_InformationInterface_Property_ReportOperatingSystem();

DIGITALTWIN_CLIENT_RESULT Device_Detailed_InformationInterface_Property_ReportMAC();

DIGITALTWIN_CLIENT_RESULT Device_Detailed_InformationInterface_Property_ReportCPU();

DIGITALTWIN_CLIENT_RESULT Device_Detailed_InformationInterface_Property_ReportMemory();

DIGITALTWIN_CLIENT_RESULT Device_Detailed_InformationInterface_Property_ReportGrafanaFolder();

DIGITALTWIN_CLIENT_RESULT Device_Detailed_InformationInterface_Property_ReportGrafanaBoard();

DIGITALTWIN_CLIENT_RESULT Device_Detailed_InformationInterface_Property_ReportLastConnectedAt();

#ifdef __cplusplus
}
#endif

#endif  // DEVICE_DETAILED_INFORMATION_INTERFACE_H
